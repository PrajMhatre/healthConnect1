{"ast":null,"code":"var _jsxFileName = \"F:\\\\healthconnect\\\\healthConnect\\\\frontend\\\\src\\\\components\\\\Profile\\\\UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For redirecting user\nimport './UserProfile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    username: '',\n    email: '',\n    role: '',\n    userId: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if user is logged in by verifying token in localStorage\n    const token = localStorage.getItem('token');\n    if (!token) {\n      // If no token is found, redirect to the login page\n      navigate('/login');\n      return;\n    }\n\n    // Fetch user details from localStorage\n    const username = localStorage.getItem('username');\n    const email = localStorage.getItem('email');\n    const role = localStorage.getItem('role');\n    const userId = localStorage.getItem('userId');\n    if (username && email && role && userId) {\n      setUserData({\n        username,\n        email,\n        role,\n        userId\n      });\n    } else {\n      // If no user data is found, redirect to login\n      navigate('/login');\n    }\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), \" \", userData.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), \" \", userData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), \" \", userData.role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"User ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), \" \", userData.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"M7gUXqAnIyvQr/8kVDO3/9Ob+Yw=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","UserProfile","_s","userData","setUserData","username","email","role","userId","navigate","token","localStorage","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/healthconnect/healthConnect/frontend/src/components/Profile/UserProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // For redirecting user\r\nimport './UserProfile.css';\r\n\r\nconst UserProfile = () => {\r\n  const [userData, setUserData] = useState({\r\n    username: '',\r\n    email: '',\r\n    role: '',\r\n    userId: ''\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in by verifying token in localStorage\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      // If no token is found, redirect to the login page\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    // Fetch user details from localStorage\r\n    const username = localStorage.getItem('username');\r\n    const email = localStorage.getItem('email');\r\n    const role = localStorage.getItem('role');\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    if (username && email && role && userId) {\r\n      setUserData({ username, email, role, userId });\r\n    } else {\r\n      // If no user data is found, redirect to login\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <h2>User Profile</h2>\r\n      <div className=\"profile-details\">\r\n        <div>\r\n          <strong>Username:</strong> {userData.username}\r\n        </div>\r\n        <div>\r\n          <strong>Email:</strong> {userData.email}\r\n        </div>\r\n        <div>\r\n          <strong>Role:</strong> {userData.role}\r\n        </div>\r\n        <div>\r\n          <strong>User ID:</strong> {userData.userId}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}