{"ast":null,"code":"var _jsxFileName = \"F:\\\\healthconnect\\\\healthConnect\\\\frontend\\\\src\\\\components\\\\DoctorRecommendation\\\\DoctorList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorList = ({\n  filters\n}) => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    console.log(\"ðŸ”¹ Filters sent to API:\", filters); // Log filters before making request\n\n    const fetchDoctors = async () => {\n      setLoading(true);\n      setError(\"\");\n      try {\n        const response = await axios.get(\"http://localhost:4000/api/doctors/filter\", {\n          params: filters // Use dynamic filters passed from props\n        });\n        console.log(\"âœ… Fetched Doctors from API:\", response.data);\n        setDoctors(response.data);\n      } catch (err) {\n        console.error(\"ðŸš¨ Error fetching doctors:\", err.message);\n        setError(\"Failed to fetch doctors.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (filters) {\n      fetchDoctors();\n    }\n  }, [filters]); // Fetch data whenever filters change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Doctor List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading doctors...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), doctors.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys(doctors[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key.replace(/_/g, \" \")\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(doctor).map((value, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No doctors found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorList, \"mRwfjNNRog978Yo38kE7HC7EWPI=\");\n_c = DoctorList;\nexport default DoctorList;\nvar _c;\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","DoctorList","filters","_s","doctors","setDoctors","loading","setLoading","error","setError","console","log","fetchDoctors","response","get","params","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","border","Object","keys","map","key","replace","doctor","index","values","value","i","_c","$RefreshReg$"],"sources":["F:/healthconnect/healthConnect/frontend/src/components/DoctorRecommendation/DoctorList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst DoctorList = ({ filters }) => {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"ðŸ”¹ Filters sent to API:\", filters); // Log filters before making request\r\n  \r\n    const fetchDoctors = async () => {\r\n      setLoading(true);\r\n      setError(\"\");\r\n  \r\n      try {\r\n        const response = await axios.get(\"http://localhost:4000/api/doctors/filter\", {\r\n          params: filters, // Use dynamic filters passed from props\r\n        });\r\n  \r\n        console.log(\"âœ… Fetched Doctors from API:\", response.data);\r\n        setDoctors(response.data);\r\n      } catch (err) {\r\n        console.error(\"ðŸš¨ Error fetching doctors:\", err.message);\r\n        setError(\"Failed to fetch doctors.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n  \r\n    if (filters) {\r\n      fetchDoctors();\r\n    }\r\n  }, [filters]); // Fetch data whenever filters change\r\n  \r\n  return (\r\n    <div>\r\n      <h2>Doctor List</h2>\r\n\r\n      {loading && <p>Loading doctors...</p>}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      {doctors.length > 0 ? (\r\n        <table border=\"1\">\r\n          <thead>\r\n            <tr>\r\n              {Object.keys(doctors[0]).map((key) => (\r\n                <th key={key}>{key.replace(/_/g, \" \")}</th> \r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {doctors.map((doctor, index) => (\r\n              <tr key={index}>\r\n                {Object.values(doctor).map((value, i) => (\r\n                  <td key={i}>{value}</td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        !loading && <p>No doctors found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}