{"ast":null,"code":"var _jsxFileName = \"F:\\\\healthconnect\\\\healthConnect\\\\frontend\\\\src\\\\components\\\\Profile\\\\UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './UserProfile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    username: '',\n    email: '',\n    role: '',\n    userId: ''\n  });\n  const [patientHistory, setPatientHistory] = useState([]); // State to store patient history\n  const [loading, setLoading] = useState(false); // State to handle loading state\n  const [error, setError] = useState(''); // State to handle errors\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    const username = localStorage.getItem('username');\n    const email = localStorage.getItem('email');\n    const role = localStorage.getItem('role');\n    const userId = localStorage.getItem('userId');\n    if (username && email && role && userId) {\n      const userData = {\n        username,\n        email,\n        role,\n        userId\n      };\n      setUserData(userData);\n\n      // Fetch patient history after setting user data\n      fetchPatientHistory(userId);\n    } else {\n      navigate('/login');\n    }\n  }, [navigate]);\n  const fetchPatientHistory = async userId => {\n    setLoading(true); // Set loading to true\n    setError(''); // Clear any previous errors\n\n    try {\n      const response = await fetch(`/api/user/patient-history/${userId}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch patient history');\n      }\n      const result = await response.json();\n      setPatientHistory(result.patientHistory); // Store patient history in state\n    } catch (error) {\n      console.error('Error fetching patient history:', error);\n      setError('Failed to fetch patient history. Please try again later.'); // Set error message\n    } finally {\n      setLoading(false); // Set loading to false\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), \" \", userData.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), \" \", userData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), \" \", userData.role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"User ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), \" \", userData.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Patient History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading patient history...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : patientHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: patientHistory.map(record => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), \" \", new Date(record.Date_Of_Record).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Diseases:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), \" \", record.Previous_Diseases]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Symptoms:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), \" \", record.Previous_Symptoms]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Doctor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), \" \", record.Dr_Name, \" (ID: \", record.Doctor_Id, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, record.History_Id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No patient history found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"LKd06uupA64JCSkdWYb18g61XAA=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProfile;\nexport default UserProfile;\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom'; // For redirecting user\n// import './UserProfile.css';\n\n// const UserProfile = () => {\n//   const [userData, setUserData] = useState({\n//     username: '',\n//     email: '',\n//     role: '',\n//     userId: ''\n//   });\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Fetch user details from localStorage\n//     const username = localStorage.getItem('username');\n//     const email = localStorage.getItem('email');\n//     const role = localStorage.getItem('role');\n//     const userId = localStorage.getItem('userId');\n\n//     if (username && email && role && userId) {\n//       setUserData({ username, email, role, userId });\n\n//       // Send user data to the backend\n//       const fetchUserProfile = async () => {\n//         try {\n//           const response = await fetch('http://localhost:4000/api/user-profile', {\n//             method: 'POST', // Using POST method to send the data\n//             headers: {\n//               'Content-Type': 'application/json', // Set header to JSON\n//             },\n//             body: JSON.stringify({\n//               username, \n//               email, \n//               role, \n//               userId\n//             })\n//           });\n\n//           if (response.ok) {\n//             const data = await response.json();\n//             // Handle the response data, if needed\n//             console.log(data); // This will contain the data fetched from the backend\n//           } else {\n//             console.error('Failed to fetch user profile');\n//           }\n//         } catch (err) {\n//           console.error('Error sending user data:', err);\n//         }\n//       };\n\n//       fetchUserProfile(); // Call the function to send data to the backend\n//     } else {\n//       // If no user data is found, redirect to login\n//       navigate('/login');\n//     }\n//   }, [navigate]);\n\n//   return (\n//     <div className=\"profile-container\">\n//       <h2>User Profile</h2>\n//       <div className=\"profile-details\">\n//         <div>\n//           <strong>Username:</strong> {userData.username}\n//         </div>\n//         <div>\n//           <strong>Email:</strong> {userData.email}\n//         </div>\n//         <div>\n//           <strong>Role:</strong> {userData.role}\n//         </div>\n//         <div>\n//           <strong>User ID:</strong> {userData.userId}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","UserProfile","_s","userData","setUserData","username","email","role","userId","patientHistory","setPatientHistory","loading","setLoading","error","setError","navigate","token","localStorage","getItem","fetchPatientHistory","response","fetch","method","headers","ok","Error","result","json","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","record","Date","Date_Of_Record","toLocaleDateString","Previous_Diseases","Previous_Symptoms","Dr_Name","Doctor_Id","History_Id","_c","$RefreshReg$"],"sources":["F:/healthconnect/healthConnect/frontend/src/components/Profile/UserProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './UserProfile.css';\r\n\r\nconst UserProfile = () => {\r\n  const [userData, setUserData] = useState({\r\n    username: '',\r\n    email: '',\r\n    role: '',\r\n    userId: ''\r\n  });\r\n  const [patientHistory, setPatientHistory] = useState([]); // State to store patient history\r\n  const [loading, setLoading] = useState(false); // State to handle loading state\r\n  const [error, setError] = useState(''); // State to handle errors\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    const username = localStorage.getItem('username');\r\n    const email = localStorage.getItem('email');\r\n    const role = localStorage.getItem('role');\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    if (username && email && role && userId) {\r\n      const userData = { username, email, role, userId };\r\n      setUserData(userData);\r\n\r\n      // Fetch patient history after setting user data\r\n      fetchPatientHistory(userId);\r\n    } else {\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  const fetchPatientHistory = async (userId) => {\r\n    setLoading(true); // Set loading to true\r\n    setError(''); // Clear any previous errors\r\n\r\n    try {\r\n      const response = await fetch(`/api/user/patient-history/${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch patient history');\r\n      }\r\n\r\n      const result = await response.json();\r\n      setPatientHistory(result.patientHistory); // Store patient history in state\r\n    } catch (error) {\r\n      console.error('Error fetching patient history:', error);\r\n      setError('Failed to fetch patient history. Please try again later.'); // Set error message\r\n    } finally {\r\n      setLoading(false); // Set loading to false\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <h2>User Profile</h2>\r\n      <div className=\"profile-details\">\r\n        <div>\r\n          <strong>Username:</strong> {userData.username}\r\n        </div>\r\n        <div>\r\n          <strong>Email:</strong> {userData.email}\r\n        </div>\r\n        <div>\r\n          <strong>Role:</strong> {userData.role}\r\n        </div>\r\n        <div>\r\n          <strong>User ID:</strong> {userData.userId}\r\n        </div>\r\n      </div>\r\n\r\n      <h3>Patient History</h3>\r\n      {loading ? (\r\n        <p>Loading patient history...</p>\r\n      ) : error ? (\r\n        <p style={{ color: 'red' }}>{error}</p>\r\n      ) : patientHistory.length > 0 ? (\r\n        <ul>\r\n          {patientHistory.map((record) => (\r\n            <li key={record.History_Id}>\r\n              <div>\r\n                <strong>Date:</strong> {new Date(record.Date_Of_Record).toLocaleDateString()}\r\n              </div>\r\n              <div>\r\n                <strong>Diseases:</strong> {record.Previous_Diseases}\r\n              </div>\r\n              <div>\r\n                <strong>Symptoms:</strong> {record.Previous_Symptoms}\r\n              </div>\r\n              <div>\r\n                <strong>Doctor:</strong> {record.Dr_Name} (ID: {record.Doctor_Id})\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No patient history found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom'; // For redirecting user\r\n// import './UserProfile.css';\r\n\r\n// const UserProfile = () => {\r\n//   const [userData, setUserData] = useState({\r\n//     username: '',\r\n//     email: '',\r\n//     role: '',\r\n//     userId: ''\r\n//   });\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     // Fetch user details from localStorage\r\n//     const username = localStorage.getItem('username');\r\n//     const email = localStorage.getItem('email');\r\n//     const role = localStorage.getItem('role');\r\n//     const userId = localStorage.getItem('userId');\r\n\r\n//     if (username && email && role && userId) {\r\n//       setUserData({ username, email, role, userId });\r\n\r\n//       // Send user data to the backend\r\n//       const fetchUserProfile = async () => {\r\n//         try {\r\n//           const response = await fetch('http://localhost:4000/api/user-profile', {\r\n//             method: 'POST', // Using POST method to send the data\r\n//             headers: {\r\n//               'Content-Type': 'application/json', // Set header to JSON\r\n//             },\r\n//             body: JSON.stringify({\r\n//               username, \r\n//               email, \r\n//               role, \r\n//               userId\r\n//             })\r\n//           });\r\n\r\n//           if (response.ok) {\r\n//             const data = await response.json();\r\n//             // Handle the response data, if needed\r\n//             console.log(data); // This will contain the data fetched from the backend\r\n//           } else {\r\n//             console.error('Failed to fetch user profile');\r\n//           }\r\n//         } catch (err) {\r\n//           console.error('Error sending user data:', err);\r\n//         }\r\n//       };\r\n\r\n//       fetchUserProfile(); // Call the function to send data to the backend\r\n//     } else {\r\n//       // If no user data is found, redirect to login\r\n//       navigate('/login');\r\n//     }\r\n//   }, [navigate]);\r\n\r\n//   return (\r\n//     <div className=\"profile-container\">\r\n//       <h2>User Profile</h2>\r\n//       <div className=\"profile-details\">\r\n//         <div>\r\n//           <strong>Username:</strong> {userData.username}\r\n//         </div>\r\n//         <div>\r\n//           <strong>Email:</strong> {userData.email}\r\n//         </div>\r\n//         <div>\r\n//           <strong>Role:</strong> {userData.role}\r\n//         </div>\r\n//         <div>\r\n//           <strong>User ID:</strong> {userData.userId}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserProfile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;EACV,CAAC,CAAC;EACF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAMmB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMmB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACF,KAAK,EAAE;MACVD,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEA,MAAMV,QAAQ,GAAGY,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,MAAMZ,KAAK,GAAGW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMX,IAAI,GAAGU,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,MAAMV,MAAM,GAAGS,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAE7C,IAAIb,QAAQ,IAAIC,KAAK,IAAIC,IAAI,IAAIC,MAAM,EAAE;MACvC,MAAML,QAAQ,GAAG;QAAEE,QAAQ;QAAEC,KAAK;QAAEC,IAAI;QAAEC;MAAO,CAAC;MAClDJ,WAAW,CAACD,QAAQ,CAAC;;MAErB;MACAgB,mBAAmB,CAACX,MAAM,CAAC;IAC7B,CAAC,MAAM;MACLO,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMI,mBAAmB,GAAG,MAAOX,MAAM,IAAK;IAC5CI,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClBE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEd,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6Bb,MAAM,EAAE,EAAE;QAClEc,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUN,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC1D;MACF,CAAC,CAAC;MAEF,IAAI,CAACE,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;MACpD;MAEA,MAAMC,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MACpCjB,iBAAiB,CAACgB,MAAM,CAACjB,cAAc,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC,OAAOI,KAAK,EAAE;MACde,OAAO,CAACf,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDC,QAAQ,CAAC,0DAA0D,CAAC,CAAC,CAAC;IACxE,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAK6B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC9B,OAAA;MAAA8B,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBlC,OAAA;MAAK6B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B9B,OAAA;QAAA8B,QAAA,gBACE9B,OAAA;UAAA8B,QAAA,EAAQ;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC/B,QAAQ,CAACE,QAAQ;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACNlC,OAAA;QAAA8B,QAAA,gBACE9B,OAAA;UAAA8B,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC/B,QAAQ,CAACG,KAAK;MAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACNlC,OAAA;QAAA8B,QAAA,gBACE9B,OAAA;UAAA8B,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC/B,QAAQ,CAACI,IAAI;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACNlC,OAAA;QAAA8B,QAAA,gBACE9B,OAAA;UAAA8B,QAAA,EAAQ;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC/B,QAAQ,CAACK,MAAM;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENlC,OAAA;MAAA8B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBvB,OAAO,gBACNX,OAAA;MAAA8B,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAC/BrB,KAAK,gBACPb,OAAA;MAAGmC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEjB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GACrCzB,cAAc,CAAC4B,MAAM,GAAG,CAAC,gBAC3BrC,OAAA;MAAA8B,QAAA,EACGrB,cAAc,CAAC6B,GAAG,CAAEC,MAAM,iBACzBvC,OAAA;QAAA8B,QAAA,gBACE9B,OAAA;UAAA8B,QAAA,gBACE9B,OAAA;YAAA8B,QAAA,EAAQ;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC,IAAIM,IAAI,CAACD,MAAM,CAACE,cAAc,CAAC,CAACC,kBAAkB,CAAC,CAAC;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC,eACNlC,OAAA;UAAA8B,QAAA,gBACE9B,OAAA;YAAA8B,QAAA,EAAQ;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACK,MAAM,CAACI,iBAAiB;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACNlC,OAAA;UAAA8B,QAAA,gBACE9B,OAAA;YAAA8B,QAAA,EAAQ;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACK,MAAM,CAACK,iBAAiB;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACNlC,OAAA;UAAA8B,QAAA,gBACE9B,OAAA;YAAA8B,QAAA,EAAQ;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACK,MAAM,CAACM,OAAO,EAAC,QAAM,EAACN,MAAM,CAACO,SAAS,EAAC,GACnE;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAZCK,MAAM,CAACQ,UAAU;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAatB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELlC,OAAA;MAAA8B,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAChC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChC,EAAA,CA7GID,WAAW;EAAA,QAUEH,WAAW;AAAA;AAAAkD,EAAA,GAVxB/C,WAAW;AA+GjB,eAAeA,WAAW;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}