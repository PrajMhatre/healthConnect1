{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nconst AuthCheck = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const expirationTime = localStorage.getItem(\"expirationTime\");\n    if (expirationTime && new Date().getTime() > expirationTime) {\n      alert(\"Session expired. Please log in again.\");\n      localStorage.clear();\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n  return null;\n};\n_s(AuthCheck, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthCheck;\nexport default AuthCheck;\nvar _c;\n$RefreshReg$(_c, \"AuthCheck\");","map":{"version":3,"names":["useEffect","useNavigate","AuthCheck","_s","navigate","expirationTime","localStorage","getItem","Date","getTime","alert","clear","_c","$RefreshReg$"],"sources":["F:/healthconnect/healthConnect/frontend/src/AuthCheck.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AuthCheck = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const expirationTime = localStorage.getItem(\"expirationTime\");\r\n\r\n    if (expirationTime && new Date().getTime() > expirationTime) {\r\n      alert(\"Session expired. Please log in again.\");\r\n      localStorage.clear();\r\n      navigate(\"/login\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default AuthCheck;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMK,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAE7D,IAAIF,cAAc,IAAI,IAAIG,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAGJ,cAAc,EAAE;MAC3DK,KAAK,CAAC,uCAAuC,CAAC;MAC9CJ,YAAY,CAACK,KAAK,CAAC,CAAC;MACpBP,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,OAAO,IAAI;AACb,CAAC;AAACD,EAAA,CAdID,SAAS;EAAA,QACID,WAAW;AAAA;AAAAW,EAAA,GADxBV,SAAS;AAgBf,eAAeA,SAAS;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}