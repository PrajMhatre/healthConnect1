{"ast":null,"code":"var _jsxFileName = \"F:\\\\healthconnect\\\\healthConnect\\\\frontend\\\\src\\\\components\\\\Profile\\\\UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For redirecting user\nimport './UserProfile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const [patientData, setPatientData] = useState({\n    userId: '',\n    username: '',\n    previousDiseases: '',\n    previousSymptoms: '',\n    dateOfRecord: '',\n    doctorId: '',\n    drName: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch user details from localStorage\n    const userId = localStorage.getItem('userId');\n    const username = localStorage.getItem('username');\n    if (userId && username) {\n      // Set user data in the state\n      setPatientData({\n        userId,\n        username\n      });\n\n      // Send user data to the backend to fetch patient history\n      const fetchUserProfile = async () => {\n        try {\n          const response = await fetch('http://localhost:4000/api/user-profile', {\n            method: 'POST',\n            // Using POST method to send the data\n            headers: {\n              'Content-Type': 'application/json' // Set header to JSON\n            },\n            body: JSON.stringify({\n              username,\n              userId\n            })\n          });\n          if (response.ok) {\n            const data = await response.json();\n            // Assuming the backend returns the patient history data\n            setPatientData(prevState => {\n              var _data$history$, _data$history$2, _data$history$3, _data$history$4, _data$history$5;\n              return {\n                ...prevState,\n                previousDiseases: ((_data$history$ = data.history[0]) === null || _data$history$ === void 0 ? void 0 : _data$history$.Previous_Diseases) || '',\n                previousSymptoms: ((_data$history$2 = data.history[0]) === null || _data$history$2 === void 0 ? void 0 : _data$history$2.Previous_Symptoms) || '',\n                dateOfRecord: ((_data$history$3 = data.history[0]) === null || _data$history$3 === void 0 ? void 0 : _data$history$3.Date_Of_Record) || '',\n                doctorId: ((_data$history$4 = data.history[0]) === null || _data$history$4 === void 0 ? void 0 : _data$history$4.Doctor_Id) || '',\n                drName: ((_data$history$5 = data.history[0]) === null || _data$history$5 === void 0 ? void 0 : _data$history$5.Dr_Name) || ''\n              };\n            });\n          } else {\n            console.error('Failed to fetch user profile');\n          }\n        } catch (err) {\n          console.error('Error sending user data:', err);\n        }\n      };\n      fetchUserProfile(); // Call the function to send data to the backend\n    } else {\n      // If no user data is found, redirect to login\n      navigate('/login');\n    }\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"User ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), \" \", patientData.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), \" \", patientData.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Previous Diseases:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), \" \", patientData.previousDiseases]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Previous Symptoms:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), \" \", patientData.previousSymptoms]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date of Record:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), \" \", patientData.dateOfRecord]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Doctor ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), \" \", patientData.doctorId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Doctor Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), \" \", patientData.drName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"bj1RJvI0CRXlRysob155fxVYtjw=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","UserProfile","_s","patientData","setPatientData","userId","username","previousDiseases","previousSymptoms","dateOfRecord","doctorId","drName","navigate","localStorage","getItem","fetchUserProfile","response","fetch","method","headers","body","JSON","stringify","ok","data","json","prevState","_data$history$","_data$history$2","_data$history$3","_data$history$4","_data$history$5","history","Previous_Diseases","Previous_Symptoms","Date_Of_Record","Doctor_Id","Dr_Name","console","error","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/healthconnect/healthConnect/frontend/src/components/Profile/UserProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // For redirecting user\r\nimport './UserProfile.css';\r\n\r\nconst UserProfile = () => {\r\n  const [patientData, setPatientData] = useState({\r\n    userId: '',\r\n    username: '',\r\n    previousDiseases: '',\r\n    previousSymptoms: '',\r\n    dateOfRecord: '',\r\n    doctorId: '',\r\n    drName: ''\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Fetch user details from localStorage\r\n    const userId = localStorage.getItem('userId');\r\n    const username = localStorage.getItem('username');\r\n\r\n    if (userId && username) {\r\n      // Set user data in the state\r\n      setPatientData({ userId, username });\r\n\r\n      // Send user data to the backend to fetch patient history\r\n      const fetchUserProfile = async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:4000/api/user-profile', {\r\n            method: 'POST', // Using POST method to send the data\r\n            headers: {\r\n              'Content-Type': 'application/json', // Set header to JSON\r\n            },\r\n            body: JSON.stringify({\r\n              username,\r\n              userId\r\n            })\r\n          });\r\n\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            // Assuming the backend returns the patient history data\r\n            setPatientData(prevState => ({\r\n              ...prevState,\r\n              previousDiseases: data.history[0]?.Previous_Diseases || '',\r\n              previousSymptoms: data.history[0]?.Previous_Symptoms || '',\r\n              dateOfRecord: data.history[0]?.Date_Of_Record || '',\r\n              doctorId: data.history[0]?.Doctor_Id || '',\r\n              drName: data.history[0]?.Dr_Name || ''\r\n            }));\r\n          } else {\r\n            console.error('Failed to fetch user profile');\r\n          }\r\n        } catch (err) {\r\n          console.error('Error sending user data:', err);\r\n        }\r\n      };\r\n\r\n      fetchUserProfile(); // Call the function to send data to the backend\r\n    } else {\r\n      // If no user data is found, redirect to login\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <h2>User Profile</h2>\r\n      <div className=\"profile-details\">\r\n        <div>\r\n          <strong>User ID:</strong> {patientData.userId}\r\n        </div>\r\n        <div>\r\n          <strong>Username:</strong> {patientData.username}\r\n        </div>\r\n        <div>\r\n          <strong>Previous Diseases:</strong> {patientData.previousDiseases}\r\n        </div>\r\n        <div>\r\n          <strong>Previous Symptoms:</strong> {patientData.previousSymptoms}\r\n        </div>\r\n        <div>\r\n          <strong>Date of Record:</strong> {patientData.dateOfRecord}\r\n        </div>\r\n        <div>\r\n          <strong>Doctor ID:</strong> {patientData.doctorId}\r\n        </div>\r\n        <div>\r\n          <strong>Doctor Name:</strong> {patientData.drName}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}