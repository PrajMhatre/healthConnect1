{"ast":null,"code":"var _jsxFileName = \"F:\\\\healthconnect\\\\healthConnect\\\\frontend\\\\src\\\\components\\\\DiseasePrediction\\\\DiseaseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for programmatic navigation\nimport \"./DiseaseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiseasePredictionForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    itching: \"\",\n    skin_rash: \"\",\n    nodal_skin_eruptions: \"\",\n    continuous_sneezing: \"\",\n    shivering: \"\",\n    joint_pain: \"\",\n    stomach_pain: \"\",\n    acidity: \"\",\n    vomiting: \"\",\n    fatigue: \"\",\n    weight_loss: \"\",\n    restlessness: \"\",\n    lethargy: \"\",\n    cough: \"\",\n    high_fever: \"\",\n    sunken_eyes: \"\",\n    breathlessness: \"\",\n    sweating: \"\",\n    dehydration: \"\",\n    indigestion: \"\",\n    headache: \"\",\n    yellowish_skin: \"\",\n    abdominal_pain: \"\",\n    phlegm: \"\",\n    redness_of_eyes: \"\"\n  });\n  const [error, setError] = useState({});\n  const navigate = useNavigate();\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (value === \"0\" || value === \"1\" || value === \"\") {\n      setError(prev => ({\n        ...prev,\n        [name]: \"\"\n      }));\n    } else {\n      setError(prev => ({\n        ...prev,\n        [name]: \"Only 0 or 1 is allowed.\"\n      }));\n    }\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const validationErrors = {};\n    Object.keys(formData).forEach(key => {\n      if (formData[key] !== \"0\" && formData[key] !== \"1\" && formData[key] !== \"\") {\n        validationErrors[key] = \"Only 0 or 1 is allowed.\";\n      }\n    });\n    setError(validationErrors);\n\n    // If no validation errors, submit the form and navigate\n    if (Object.keys(validationErrors).length === 0) {\n      // Handle form submission logic here (e.g., API call)\n      navigate(\"/disease-prediction/result\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"form-heading\",\n      children: \"Disease Prediction Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"form-description\",\n      children: \"Please provide details about the symptoms you are experiencing. Fill in the required information below for accurate predictions.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"symptoms-form\",\n      onSubmit: handleSubmit,\n      children: [Object.keys(formData).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: key,\n            children: key.replace(/_/g, \" \").toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: key,\n            name: key,\n            value: formData[key],\n            placeholder: `Do you have ${key.replace(/_/g, \" \")}?`,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), error[key] && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: error[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(DiseasePredictionForm, \"wieFmiI0Jhg3goNuY33L/nSlryo=\", false, function () {\n  return [useNavigate];\n});\n_c = DiseasePredictionForm;\nexport default DiseasePredictionForm;\nvar _c;\n$RefreshReg$(_c, \"DiseasePredictionForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","DiseasePredictionForm","_s","formData","setFormData","itching","skin_rash","nodal_skin_eruptions","continuous_sneezing","shivering","joint_pain","stomach_pain","acidity","vomiting","fatigue","weight_loss","restlessness","lethargy","cough","high_fever","sunken_eyes","breathlessness","sweating","dehydration","indigestion","headache","yellowish_skin","abdominal_pain","phlegm","redness_of_eyes","error","setError","navigate","handleInputChange","e","name","value","target","prev","prevData","handleSubmit","preventDefault","validationErrors","Object","keys","forEach","key","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","htmlFor","replace","toUpperCase","type","id","placeholder","onChange","_c","$RefreshReg$"],"sources":["F:/healthconnect/healthConnect/frontend/src/components/DiseasePrediction/DiseaseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';  // Import useNavigate for programmatic navigation\r\nimport \"./DiseaseForm.css\";\r\n\r\nconst DiseasePredictionForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    itching: \"\",\r\n    skin_rash: \"\",\r\n    nodal_skin_eruptions: \"\",\r\n    continuous_sneezing: \"\",\r\n    shivering: \"\",\r\n    joint_pain: \"\",\r\n    stomach_pain: \"\",\r\n    acidity: \"\",\r\n    vomiting: \"\",\r\n    fatigue: \"\",\r\n    weight_loss: \"\",\r\n    restlessness: \"\",\r\n    lethargy: \"\",\r\n    cough: \"\",\r\n    high_fever: \"\",\r\n    sunken_eyes: \"\",\r\n    breathlessness: \"\",\r\n    sweating: \"\",\r\n    dehydration: \"\",\r\n    indigestion: \"\",\r\n    headache: \"\",\r\n    yellowish_skin: \"\",\r\n    abdominal_pain: \"\",\r\n    phlegm: \"\",\r\n    redness_of_eyes: \"\"\r\n  });\r\n  const [error, setError] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (value === \"0\" || value === \"1\" || value === \"\") {\r\n      setError((prev) => ({ ...prev, [name]: \"\" }));\r\n    } else {\r\n      setError((prev) => ({ ...prev, [name]: \"Only 0 or 1 is allowed.\" }));\r\n    }\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = {};\r\n    Object.keys(formData).forEach((key) => {\r\n      if (formData[key] !== \"0\" && formData[key] !== \"1\" && formData[key] !== \"\") {\r\n        validationErrors[key] = \"Only 0 or 1 is allowed.\";\r\n      }\r\n    });\r\n    setError(validationErrors);\r\n\r\n    // If no validation errors, submit the form and navigate\r\n    if (Object.keys(validationErrors).length === 0) {\r\n      // Handle form submission logic here (e.g., API call)\r\n      navigate(\"/disease-prediction/result\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1 className=\"form-heading\">Disease Prediction Form</h1>\r\n      <p className=\"form-description\">\r\n        Please provide details about the symptoms you are experiencing. Fill in the required information below for accurate predictions.\r\n      </p>\r\n      <form className=\"symptoms-form\" onSubmit={handleSubmit}>\r\n        {Object.keys(formData).map((key) => (\r\n          <div key={key} className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor={key}>{key.replace(/_/g, \" \").toUpperCase()}</label>\r\n              <input\r\n                type=\"text\"\r\n                id={key}\r\n                name={key}\r\n                value={formData[key]}\r\n                placeholder={`Do you have ${key.replace(/_/g, \" \")}?`}\r\n                onChange={handleInputChange}\r\n              />\r\n              {error[key] && <span className=\"error-text\">{error[key]}</span>}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\" className=\"submit-button\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiseasePredictionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}